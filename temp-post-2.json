{
  "title": "Setting Up Continuous Deployment for a Portfolio Site",
  "slug": "continuous-deployment-portfolio",
  "excerpt": "Automating the deployment process to save time and reduce errors when updating your portfolio.",
  "content": "<p>As a developer, I'm always looking for ways to automate repetitive tasks. One of the most common is the deployment process for websites. For my portfolio site, I wanted a smooth, automated workflow that would deploy my changes as soon as I pushed them to the main branch.</p><h2>The Manual Process</h2><p>Before automation, my deployment workflow looked like this:</p><ol><li>Push changes to GitHub</li><li>SSH into my server</li><li>Pull the latest changes</li><li>Run npm build</li><li>Copy the build files to the web server directory</li><li>Restart the server if necessary</li></ol><p>This process was error-prone and took up valuable time that could be better spent on development.</p><h2>The Automated Solution</h2><p>I implemented a continuous deployment pipeline using:</p><ul><li>GitHub Actions for workflow automation</li><li>SSH deployment action to connect to my server</li><li>Environment variables for secure credential storage</li><li>Build and deployment scripts</li></ul><p>Now, the entire process happens automatically whenever I push to the main branch, and I receive notifications about the deployment status.</p>",
  "categoryId": 3,
  "featuredImage": "https://images.unsplash.com/photo-1565106430482-8f6e74349ca1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80",
  "tags": ["DevOps", "CI/CD", "GitHub Actions", "Automation"],
  "publishDate": "2025-03-15",
  "status": "published",
  "userId": 1
}
